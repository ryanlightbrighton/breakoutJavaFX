#BlueJ class context
comment0.target=Model
comment0.text=\r\n\ \ \ \ <h2>This\ manages\ the\ state\ of\ the\ game</h2>\r\n\ \ \ \ \r\n\ \ \ \ <p>The\ model\ represents\ all\ the\ actual\ content\ and\ functionality\ of\ the\ app\r\n\ \ \ \ For\ Breakout,\ it\ manages\ all\ the\ game\ objects\ that\ the\ View\ needs\r\n\ \ \ \ (the\ bat,\ ball,\ bricks,\ and\ the\ score),\ provides\ methods\ to\ allow\ the\ Controller\r\n\ \ \ \ to\ move\ the\ bat\ (and\ a\ couple\ of\ other\ functions\ -\ change\ the\ speed\ or\ stop\ \r\n\ \ \ \ the\ game),\ and\ runs\ a\ background\ process\ (a\ 'thread')\ that\ moves\ the\ ball\ \r\n\ \ \ \ every\ 20\ milliseconds\ and\ checks\ for\ collisions.</p>\r\n\ \ \ \ \r\n\ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n
comment1.params=w\ h\ st
comment1.target=Model(int,\ int,\ javafx.stage.Stage)
comment1.text=\r\n\ \ \ \ \ \ \ \ <h2>Constructor</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>The\ constructor\ saves\ the\ window\ dimensions.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ w\ Width\ of\ window\r\n\ \ \ \ \ \ \ \ @param\ h\ Height\ of\ window\r\n\ \ \ \ \ \ \ \ @param\ st\ Window\ object\r\n
comment10.params=
comment10.target=void\ runGame()
comment10.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ is\ the\ main\ animation\ loop\ for\ the\ game.</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ runs\ the\ {@code\ initialiseGame()}\ method,\ then\ updates\ the\ game\ state\ and\ screen\ in\ a\ loop\ every\ few\ milliseconds\ by\ running\ \r\n\ \ \ \ \ \ \ \ {@code\ updateGame()}\ and\ {@code\ modelChanged()}.\r\n\ \ \ \ \ \ \ \ The\ section\ after\ was\ added\ by\ me\ to\ select\ the\ appropriate\ 'new\ level'\ pane\ or\ 'game\ over'\ pane\ based\ on\ the\ players\ outcome.\r\n\ \ \ \ \ \ \ \ Initially,\ I\ had\ this\ code\ running\ in\ the\ View\ object,\ but\ there\ were\ synchronisation\ issues\ and\ sometimes\ a\ second\ instance\ of\ the\ game\ \r\n\ \ \ \ \ \ \ \ would\ spawn.\ \ After\ checking\ with\ Roger,\ he\ suggested\ relocating\ the\ code\ back\ to\ the\ {@code\ Model}\ because\ the\ {@code\ View}\ should\ only\ be\ for\ rendering\ \r\n\ \ \ \ \ \ \ \ the\ changes,\ and\ not\ making\ them.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Moving\ the\ code\ to\ here\ allows\ the\ game\ to\ finish\ completely\ before\ the\ new\ pane\ is\ loaded.\ \ I\ managed\ to\ debug\ this\ using\ a\ combination\ of\ breakpoints\ and\ \r\n\ \ \ \ \ \ \ \ {@code\ Debug.trace()}\ calls.\ \ By\ placing\ debug\ messages\ at\ the\ start\ of\ every\ function,\ it\ is\ possible\ to\ see\ which\ ones\ have\ not\ been\ called\ when\ they\ should\ \r\n\ \ \ \ \ \ \ \ and\ (in\ this\ case)\ which\ ones\ are\ firing\ multiple\ times.\ \ Once\ I\ found\ the\ culprits,\ I\ then\ set\ breakpoints\ in\ likely\ places\ to\ follow\ the\ chain\ of\ events.<p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ made\ a\ test\ build\ of\ the\ game\ for\ doing\ this\ because\ it\ can\ be\ quite\ destructive\ when\ commenting\ out\ code\ and\ adding\ in\ test\ code.\ \ Due\ to\ the\ nature\ of\ the\ \r\n\ \ \ \ \ \ \ \ problem\ (that\ it\ only\ happened\ after\ the\ first\ level\ was\ complete\ and\ the\ game\ had\ been\ played\ through\ at\ least\ once),\ I\ had\ to\ destroy\ the\ bricks\ by\ script\ in\ \r\n\ \ \ \ \ \ \ \ order\ to\ finish\ the\ level\ quicker\ and\ inspect\ the\ results.\ \ I\ feel\ is\ quite\ hard\ to\ even\ discover\ these\ kind\ of\ problems,\ as\ they\ require\ in\ depth\ testing\ \r\n\ \ \ \ \ \ \ \ (often\ in\ a\ live\ environment),\ which\ means\ playtesting\ the\ game\ over\ and\ over.\ \ However,\ I\ did\ manage\ to\ uncover\ some\ other\ minor\ issues\ while\ trying\ to\ reproduce\ \r\n\ \ \ \ \ \ \ \ this\ problem,\ which\ made\ the\ endeavour\ more\ fruitful.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n
comment11.params=
comment11.target=void\ run()
comment12.params=
comment12.target=void\ updateGame()
comment12.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ updates\ the\ state\ of\ the\ game\ world.</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ deals\ with\ the\ following\:</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ if\ the\ ball\ needs\ to\ be\ sped\ up\ (every\ 30\ seconds)</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Moves\ the\ ball</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ for\ collision\ with\ walls</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ for\ collision\ with\ the\ bat</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ for\ collision\ with\ walls</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ for\ collision\ with\ the\ floor</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ for\ collision\ with\ the\ roof</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Checks\ for\ collision\ with\ any\ bricks</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Stops\ the\ game\ if\ the\ player\ is\ out\ of\ lives</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Ends\ the\ level\ if\ the\ bricks\ are\ all\ destroyed</li>\r\n\ \ \ \ \ \ \ \ </ul>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ decided\ to\ add\ some\ code\ to\ speed\ up\ the\ ball\ periodically.\ \ This\ increases\ a\ sense\ of\ urgency\ in\ the\ game\ and\ adds\ challenge\ for\ the\ player.\ \ I\ added\ an\ \r\n\ \ \ \ \ \ \ \ audio\ cue,\ and\ also\ a\ particle\ label\ so\ they\ can\ see\ the\ game\ has\ decided\ to\ speed\ up\ the\ ball\ in\ case\ they\ miss\ the\ audio\ cue\ in\ the\ clutter.\r\n\ \ \ \ \ \ \ \ Additionally\ a\ visual\ cue\ was\ added\ when\ the\ ball\ strikes\ the\ floor,\ so\ players\ can\ see\ instantly\ that\ they\ have\ lost\ a\ life.\ \ I\ found\ during\ testing\ that\ if\ I\ \r\n\ \ \ \ \ \ \ \ glanced\ up\ at\ the\ status\ bar,\ then\ I\ would\ lose\ track\ of\ the\ ball\ and\ make\ a\ mistake.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>During\ testing,\ I\ found\ that\ the\ ball\ could\ wedge\ itself\ in\ the\ walls/ceiling/floor\ and\ appear\ to\ hover.\ \ This\ became\ more\ apparent\ as\ the\ speed\ of\ the\ \r\n\ \ \ \ \ \ \ \ game\ was\ increased.\ \ I\ deduced\ (from\ some\ debug\ hints)\ that\ the\ ball\ had\ gone\ so\ far\ into\ the\ surface\ that\ every\ frame\ it\ was\ changing\ direction,\ but\ never\ \r\n\ \ \ \ \ \ \ \ moving\ enough\ to\ be\ free\ of\ the\ surface\ it\ was\ trapped\ in.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ decided\ to\ add\ some\ additional\ checks\ to\ make\ sure\ that\ the\ ball\ only\ ever\ reversed\ direction\ if\ it\ was\ heading\ into\ the\ surface.\ \ For\ example,\ if\ the\ ball\ \r\n\ \ \ \ \ \ \ \ strikes\ the\ left\ wall,\ and\ is\ moving\ left,\ then\ flip\ the\ x\ direction.\ \ But\ if\ the\ ball\ is\ in\ the\ left\ wall\ and\ moving\ right,\ then\ do\ nothing\ so\ it\ can\ move\ clear\r\n\ \ \ \ \ \ \ \ of\ the\ wall.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ also\ moved\ the\ code\ that\ checks\ for\ collision\ with\ the\ bat\ above\ the\ block\ of\ code\ that\ checks\ for\ collision\ with\ the\ floor\ to\ give\ it\ priority.\ \ \r\n\ \ \ \ \ \ \ \ Although\ this\ is\ personal\ preference,\ I\ wanted\ to\ give\ players\ the\ benefit\ of\ the\ doubt\ if\ there\ was\ a\ contestable\ decision.\ \ There\ was\ an\ issue\ where\ the\ ball\ \r\n\ \ \ \ \ \ \ \ would\ get\ trapped\ under\ the\ bat\ and\ drain\ multiple\ lives\ from\ the\ player,\ but\ this\ change\ in\ conjunction\ with\ the\ checks\ for\ direction\ and\ collision\ seem\ to\ have\ \r\n\ \ \ \ \ \ \ \ allieviated\ the\ problem.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>The\ code\ to\ check\ collisions\ with\ the\ bricks\ is\ a\ standard\ loop\ to\ go\ through\ all\ the\ brick\ objects\ and\ check\ for\ intersection\ with\ the\ ball\ object.\ \ \r\n\ \ \ \ \ \ \ \ If\ a\ collision\ is\ found,\ then\ a\ further\ function\ determines\ if\ the\ brick\ was\ hit\ on\ the\ side\ or\ on\ the\ (top/bottom).\ \ I\ added\ this\ in\ because\ the\ ball\ would\r\n\ \ \ \ \ \ \ \ flip\ its\ Y\ direction\ if\ it\ struck\ the\ side\ of\ a\ brick,\ which\ seemed\ counter-intuitive\ for\ gameplay.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ feel\ this\ could\ be\ improved\ in\ terms\ of\ performance\ however.\ \ It\ seems\ wasteful\ to\ check\ for\ collisions\ with\ every\ object,\ especially\ when\ some\ of\ them\ may\ \r\n\ \ \ \ \ \ \ \ be\ on\ the\ other\ side\ of\ the\ pane.\ \ I\ was\ trialling\ a\ 'safe\ zone'\ which\ is\ laid\ out\ after\ the\ bricks\ spawn\ and\ therefore\ if\ the\ ball\ is\ within\ it,\ then\ there\ is\ no\ \r\n\ \ \ \ \ \ \ \ need\ to\ check\ for\ collisions\ with\ the\ bricks.\ \ An\ alternative\ would\ be\ to\ store\ the\ positions\ of\ the\ bricks\ immediate\ neighbours\ in\ the\ brick\ object,\ so\ if\ a\ \r\n\ \ \ \ \ \ \ \ collision\ was\ determined\ to\ have\ happened\ with\ that\ certain\ brick,\ then\ only\ the\ other\ brick\ objects\ near\ it\ would\ need\ to\ be\ checked.\ \ Unfortunately\ though,\ I\ ran\ \r\n\ \ \ \ \ \ \ \ out\ of\ time\ and\ had\ to\ prioritise\ making\ making\ the\ game\ system\ work\ as\ a\ whole,\ and\ not\ just\ one\ really\ good\ aspect\ at\ the\ detriment\ of\ everything\ else.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>The\ bricks\ have\ an\ armour\ value\ which\ degrades\ every\ time\ the\ ball\ strikes\ them.\ \ This\ is\ stored\ as\ a\ property\ in\ each\ brick\ object.\ \ \r\n\ \ \ \ \ \ \ \ They\ are\ coloured\ green\ initially,\ then\ as\ their\ armour\ degrades,\ it\ turns\ orange,\ then\ red.\ \ \r\n\ \ \ \ \ \ \ \ Once\ it\ is\ red,\ the\ next\ successive\ hit\ will\ destroy\ them.\ \ When\ a\ brick\ is\ hit\ by\ the\ ball,\ a\ sound\ effect\ will\ play\ and\ some\ impact\ sparks\ \r\n\ \ \ \ \ \ \ \ will\ be\ spawned\ at\ the\ brick\ position.\ \ I\ wanted\ to\ add\ this\ to\ add\ some\ atmosphere\ and\ fun\ for\ the\ player\ as\ well\ as\ giving\ them\ some\ audial\ and\ visual\ feedback\ \r\n\ \ \ \ \ \ \ \ on\ their\ actions.\ \ Additionally,\ a\ label\ particle\ is\ spawned\ which\ informs\ the\ player\ how\ many\ points\ they\ have\ accrued.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ also\ made\ a\ modification\ to\ the\ way\ the\ ball\ responds\ to\ the\ bat.\ \ Normally,\ the\ movement\ vector\ would\ be\ something\ like\ [1,1],\ [1,-1],[-1,-1]\ or\ [-1,1].\ \ \r\n\ \ \ \ \ \ \ \ This\ is\ to\ say\ that\ the\ ball\ only\ ever\ moves\ in\ diagonals.\ \ I\ added\ some\ code\ into\ the\ method,\ so\ the\ ball\ would\ respond\ to\ the\ bat\ direction.\ \ This\ allows\ the\ \r\n\ \ \ \ \ \ \ \ player\ to\ change\ the\ direction\ of\ the\ ball\ when\ it\ is\ struck,\ much\ the\ same\ as\ a\ snooker\ player\ might\ try\ and\ slice\ a\ shot.\ \ I\ would\ have\ liked\ to\ expand\ on\r\n\ \ \ \ \ \ \ \ this\ more\ and\ replace\ the\ entire\ movement\ system\ with\ vectors,\ but\ my\ experiments\ were\ not\ fruitful\ enough\ in\ the\ time\ I\ had\ available.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>The\ last\ modification\ was\ to\ run\ a\ check\ to\ see\ if\ the\ bricks\ have\ been\ totally\ destoyed,\ or\ if\ the\ player\ is\ out\ of\ lives.\ \ In\ either\ case,\ it\ sets\ \r\n\ \ \ \ \ \ \ \ {@code\ setGameRunning(false)}\ so\ the\ loop\ can\ quit\ then\ run\ the\ pane\ select\ code\ after.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n
comment13.params=
comment13.target=void\ run()
comment14.params=
comment14.target=void\ run()
comment15.params=
comment15.target=void\ run()
comment16.params=
comment16.target=void\ run()
comment17.params=
comment17.target=void\ run()
comment18.params=
comment18.target=void\ run()
comment19.params=
comment19.target=void\ run()
comment2.params=musicFile
comment2.target=void\ playSound(java.lang.String)
comment2.text=\r\n\ \ \ \ \ \ \ \ <h2>Plays\ sound\ file</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Uses\ string\ as\ path\ to\ sound\ file</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ musicFile\ path\ in\ local\ folder\ to\ music\ file\r\n
comment20.params=
comment20.target=void\ modelChanged()
comment20.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ is\ how\ the\ Model\ talks\ to\ the\ View</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Whenever\ the\ {@code\ Model}\ changes,\ this\ method\ calls\ the\ {@code\ update}\ method\ in\ the\ {@code\ View}.\ It\ needs\ to\ run\ in\ the\ JavaFX\ event\ thread,\ and\ {@code\ Platform.runLater}\ \r\n\ \ \ \ \ \ \ \ is\ a\ utility\ that\ makes\ sure\ this\ happens\ even\ if\ called\ from\ the\ {@code\ runGame}\ thread</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment21.params=value
comment21.target=void\ setGameRunning(java.lang.Boolean)
comment21.text=\r\n\ \ \ \ \ \ \ \ <h2>Change\ game\ running\ state</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>set\ to\ {@code\ false}\ to\ stop\ the\ game</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment22.params=
comment22.target=java.lang.Boolean\ getGameRunning()
comment22.text=\r\n\ \ \ \ \ \ \ \ <h2>Return\ game\ running\ state</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment23.params=value
comment23.target=void\ setFast(java.lang.Boolean)
comment23.text=\r\n\ \ \ \ \ \ \ \ <h2>Change\ game\ speed</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>{@code\ false}\ is\ normal\ speed,\ {@code\ true}\ is\ fast</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment24.params=
comment24.target=java.lang.Boolean\ getFast()
comment24.text=\r\n\ \ \ \ \ \ \ \ <h2>Return\ game\ speed</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>{@code\ false}\ is\ normal\ speed,\ {@code\ true}\ is\ fast</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ game\ speed\r\n
comment25.params=
comment25.target=BatObj\ getBat()
comment25.text=\r\n\ \ \ \ \ \ \ \ <h2>Return\ bat\ object</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ bat\ object\r\n
comment26.params=
comment26.target=GameObj\ getBall()
comment26.text=\r\n\ \ \ \ \ \ \ \ <h2>Return\ ball\ object</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ ball\ object\r\n
comment27.params=
comment27.target=java.util.ArrayList\ getBricks()
comment27.text=\r\n\ \ \ \ \ \ \ \ <h2>Return\ bricks</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ arraylist\ of\ bricks\r\n
comment28.params=
comment28.target=int\ getScore()
comment28.text=\r\n\ \ \ \ \ \ \ \ <h2>Return\ score</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ score\r\n
comment29.params=n
comment29.target=void\ addToScore(int)
comment29.text=\r\n\ \ \ \ \ \ \ \ <h2>Updates\ the\ score</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment3.params=
comment3.target=void\ initialiseGame()
comment3.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ sets\ up\ the\ game\ world</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ \ \ <li>Initialises\ game\ variables</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Spawns\ all\ game\ objects</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>Selects\ level</li>\r\n\ \ \ \ \ \ \ \ </ul>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n
comment30.params=
comment30.target=int\ getLives()
comment30.text=\r\n\ \ \ \ \ \ \ \ <h2>Gets\ the\ remaining\ lives</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ number\ of\ lives\r\n
comment31.params=n
comment31.target=void\ addToLives(int)
comment31.text=\r\n\ \ \ \ \ \ \ \ <h2>Adds\ to\ remaining\ lives</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Can\ be\ positive\ or\ negative</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n
comment32.params=direction
comment32.target=void\ moveBat(int)
comment32.text=\r\n\ \ \ \ \ \ \ \ <h2>Move\ the\ bat\ one\ step</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>-1\ is\ left,\ +1\ is\ right</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment33.params=
comment33.target=int\ getLevel()
comment33.text=\r\n\ \ \ \ \ \ \ \ <h2>Gets\ the\ level</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ level\ (numerical)\r\n
comment34.params=lev
comment34.target=void\ setLevel(int)
comment34.text=\r\n\ \ \ \ \ \ \ \ <h2>Sets\ the\ level</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Sets\ the\ level\ to\ the\ numerical\ input</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n
comment4.params=
comment4.target=java.lang.Thread\ startGame()
comment4.text=\r\n\ \ \ \ \ \ \ \ <h2>Starts\ animation\ thread</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Starts\ animation\ thread\ and\ returns\ the\ thread\ handle.\ \ I\ added\ the\ return\ so\ I\ could\ have\ access\ to\ the\ thread\ when\ I\ was\ runnning\ the\ game\ stop\ code\ in\ the\ \r\n\ \ \ \ \ \ \ \ {@code\ View}.\ \ Now\ the\ code\ to\ halt\ the\ game\ is\ back\ in\ the\ {@code\ Model},\ the\ return\ is\ now\ kept\ as\ legacy\ code\ but\ largely\ unneeded.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @return\ The\ thread\ handle\r\n
comment5.params=p\ xPos\ yPos\ message\ duration
comment5.target=void\ brickScore(javafx.scene.layout.Pane,\ double,\ double,\ java.lang.String,\ int)
comment5.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ spawns\ a\ label\ as\ a\ particle</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Spawns\ a\ message\ on\ screen\ as\ a\ particle\ effect.\r\n\ \ \ \ \ \ \ \ The\ message\ will\ rise\ up\ for\ the\ duration\ set\ in\ the\ params,\ then\ delete\ itself.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ p\ The\ pane\ to\ register\ this\ particle\ effect\ to\r\n\ \ \ \ \ \ \ \ @param\ xPos\ The\ x\ position\ on\ the\ window\ to\ place\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ yPos\ The\ y\ position\ on\ the\ window\ to\ place\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ message\ The\ contents\ of\ the\ message\r\n\ \ \ \ \ \ \ \ @duration\ The\ length\ of\ time\ in\ milliseconds\ the\ particle\ stays\ before\ being\ deleted\ \r\n
comment6.params=event
comment6.target=void\ handle(javafx.event.ActionEvent)
comment7.params=p\ xPos\ yPos\ dur\ scale\ scaleVariance\ color
comment7.target=void\ spark(javafx.scene.layout.Pane,\ double,\ double,\ int,\ int,\ int,\ int[])
comment7.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ spawns\ an\ asterisk\ label\ as\ a\ particle</h2>\r\n\ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>Spawns\ a\ 'spark'\ (asterisk)\ on\ screen\ with\ a\ random\ colour\ and\ direction.\r\n\ \ \ \ \ \ \ \ The\ spark\ will\ move\ towards\ this\ direction,\ then\ delete\ itself\ once\ the\ move\ is\ complete.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ p\ The\ pane\ to\ register\ this\ particle\ effect\ to\r\n\ \ \ \ \ \ \ \ @param\ xPos\ The\ x\ position\ on\ the\ window\ to\ place\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ yPos\ The\ y\ position\ on\ the\ window\ to\ place\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ dur\ The\ length\ of\ time\ in\ milliseconds\ the\ particle\ takes\ to\ complete\ the\ move\ \r\n\ \ \ \ \ \ \ \ @param\ scale\ The\ base\ size\ of\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ scaleVariance\ Number\ to\ randomly\ select\ the\ size\ of\ the\ particle\r\n\ \ \ \ \ \ \ \ @param\ color\ the\ r\ g\ b\ values\ for\ the\ spark\ in\ the\ form\ of\ an\ array\r\n
comment8.params=event
comment8.target=void\ handle(javafx.event.ActionEvent)
comment9.params=obj\ duration\ scale\ scaleVariance\ rgb
comment9.target=void\ addSparks(GameObj,\ int,\ int,\ int,\ int[])
comment9.text=\r\n\ \ \ \ \ \ \ \ <h2>Creates\ a\ cluster\ of\ particle\ effects</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ is\ used\ to\ spawn\ impact\ sparks\ when\ the\ ball\ collides\ with\ a\ brick,\ and\ also\ to\ make\ a\ trail\ for\ the\ ball\r\n\ \ \ \ \ \ \ \ When\ called,\ it\ makes\ 10\ calls\ to\ the\ {@code\ spark()}\ function\ and\ generates\ a\ randomised\ colour\ for\ each\ one.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ p\ The\ pane\ to\ register\ this\ particle\ effect\ to\r\n\ \ \ \ \ \ \ \ @param\ xPos\ The\ x\ position\ on\ the\ window\ to\ place\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ yPos\ The\ y\ position\ on\ the\ window\ to\ place\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ dur\ The\ length\ of\ time\ in\ milliseconds\ the\ particle\ takes\ to\ complete\ the\ move\ \r\n\ \ \ \ \ \ \ \ @param\ scale\ The\ base\ size\ of\ this\ particle\r\n\ \ \ \ \ \ \ \ @param\ scaleVariance\ Number\ to\ randomly\ select\ the\ size\ of\ the\ particle\r\n\ \ \ \ \ \ \ \ @param\ color\ the\ r\ g\ b\ values\ for\ the\ spark\ in\ the\ form\ of\ an\ array\r\n
numComments=35
