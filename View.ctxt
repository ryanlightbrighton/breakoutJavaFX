#BlueJ class context
comment0.target=View
comment0.text=\r\n\ \ \ \ <h2>This\ manages\ rendering\ the\ canvas\ and\ all\ objects</h2>\r\n\ \ \ \ \r\n\ \ \ \ <p>The\ View\ class\ creates\ and\ manages\ the\ GUI\ for\ the\ application.\r\n\ \ \ \ It\ doesn't\ know\ anything\ about\ the\ game\ itself,\ it\ just\ displays\r\n\ \ \ \ the\ current\ state\ of\ the\ Model,\ and\ handles\ user\ input</p>\r\n\ \ \ \ \r\n\ \ \ \ <p>In\ addition,\ I\ constructed\ some\ new\ classes\ to\ handle\ rendering\ the\ different\ windows\ for\ the\ game.\ \ I\ wanted\ to\ have\ an\ intro\ screen\ \r\n\ \ \ \ which\ keeps\ record\ of\ high\ scores\ and\ a\ game\ over\ screen\ so\ the\ player\ could\ input\ their\ name\ to\ have\ it\ saved\ to\ the\ high\ score\ table.</p>\r\n\ \ \ \ \r\n\ \ \ \ <p>After\ completing\ this,\ I\ wanted\ to\ put\ some\ levels\ in\ the\ game,\ so\ the\ player\ could\ have\ a\ sense\ of\ progression.\ \ This\ necessitated\ screens\ \r\n\ \ \ \ to\ link\ the\ levels\ together,\ and\ give\ the\ player\ a\ small\ break\ to\ prepare\ for\ the\ next\ level.</p>\r\n\ \ \ \ \r\n\ \ \ \ <p>As\ discussed\ in\ the\ {@code\ Model}\ Javadocs,\ I\ was\ running\ code\ here\ that\ ended\ up\ in\ the\ {@code\ model.runGame()}.\ \ The\ only\ vestige\ of\ it\ is\r\n\ \ \ \ some\ code\ that\ ensures\ the\ bat\ does\ not\ slip\ off\ the\ side\ of\ the\ window.\ \ I\ have\ tried\ to\ move\ it\ over\ to\ the\ {@code\ Model}\ but\ it\ errors\ when\ \r\n\ \ \ \ it\ is\ ran.\ \ I\ feel\ it\ does\ no\ harm\ being\ in\ the\ {@code\ View}.\ \ If\ I\ had\ more\ time,\ I\ could\ certainly\ look\ at\ ways\ of\ trying\ to\ move\ it\ out\ of\ \r\n\ \ \ \ the\ {@code\ View},\ but\ for\ now\ it\ would\ do\ more\ harm\ than\ good\ in\ trying\ to\ solve\ the\ problem.</p>\r\n\ \ \ \ \r\n\ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n
comment1.params=w\ h\ win
comment1.target=View(int,\ int,\ javafx.stage.Stage)
comment1.text=\r\n\ \ \ \ \ \ \ \ <h2>Constructor</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ sets\ up\ the\ window\ dimensions.</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ w\ Width\ of\ Window\r\n\ \ \ \ \ \ \ \ @param\ h\ Height\ of\ Window\r\n\ \ \ \ \ \ \ \ @param\ win\ The\ Window\ object\r\n
comment10.params=window
comment10.target=void\ start(javafx.stage.Stage)
comment10.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ sets\ the\ scene\ for\ the\ game</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ creates\ the\ screen\ that\ hosts\ the\ game\ objects.\ \ I\ added\ a\ label\ to\ hold\ the\ player\ lives\ in\ it.\r\n\ \ \ \ \ \ \ \ This\ accompanies\ the\ score\ label\ at\ the\ top\ of\ the\ screen.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ decided\ to\ change\ the\ way\ the\ key\ press\ system\ works.\ \ Due\ to\ how\ Windows\ handling\ key\ presses,\ there\ is\ some\ lag\ between\ \r\n\ \ \ \ \ \ \ \ pressing\ left\ or\ right\ and\ the\ bat\ responding.\ \ I\ felt\ this\ was\ detrimental\ to\ the\ handling\ of\ the\ game.\ \ This\ is\ covered\r\n\ \ \ \ \ \ \ \ in\ greater\ detail\ in\ the\ Javadocs\ for\ the\ {@code\ controller}.\ \ The\ new\ system\ uses\ a\ handler\ to\ detect\ {@code\ KEY_PRESSED},\ then\ sets\ the\ \r\n\ \ \ \ \ \ \ \ bat\ to\ move\ immediately\ until\ {@code\ KEY_RELEASED}\ is\ detected.\ \ To\ make\ this\ possible,\ a\ {@code\ setOnKeyReleased}\ was\ added\ here.</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ window\ The\ current\ Window\ object\r\n
comment11.params=event
comment11.target=void\ handle(javafx.scene.input.KeyEvent)
comment11.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ passes\ the\ key\ event\ to\ the\ controller</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ passes\ the\ key\ event\ to\ the\ {@code\ userKeyInteraction}\ method\ in\ the\ {@code\ Controller}.</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ event\ The\ key\ event\r\n
comment12.params=
comment12.target=void\ drawPicture()
comment12.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ draws\ the\ game</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ redraws\ the\ canvas,\ updates\ the\ score\ and\ lives\ labels\ then\ uses\ {@code\ displayGameObj}\ to\ redraw\:</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ \ \ <li>The\ ball</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>The\ bat</li>\r\n\ \ \ \ \ \ \ \ \ \ <li>The\ bricks</li>\r\n\ \ \ \ \ \ \ \ </ul>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n
comment13.params=gc\ go
comment13.target=void\ displayGameObj(javafx.scene.canvas.GraphicsContext,\ GameObj)
comment13.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ draws\ an\ object\ on\ the\ canvas</h2>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ gc\ The\ graphics\ context\r\n\ \ \ \ \ \ \ \ @param\ go\ An\ object\r\n
comment14.params=
comment14.target=void\ update()
comment14.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ is\ how\ the\ Model\ talks\ to\ the\ View</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ gets\ called\ BY\ THE\ MODEL,\ whenever\ the\ model\ changes.\ \ It\ has\ to\ do\ whatever\ is\ required\ to\ update\ the\ GUI\ to\ show\ the\ new\ model\ status</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>As\ mentioned\ at\ the\ top\ of\ this\ Javadoc,\ I\ have\ added\ a\ section\ to\ make\ the\ bat\ respect\ the\ sides\ of\ the\ screen.\ \ It\ checks\ if\ the\ bat\ is\ trying\ to\ go\ left\r\n\ \ \ \ \ \ \ \ and\ that\ the\ position\ of\ it's\ top\ left\ corner\ is\ not\ less\ than\ zero.\ \ If\ it\ is,\ it\ sets\ it\ to\ zero.\ \ If\ not\ travelling\ left,\ it\ repeats\ the\ check\ for\ the\ right\ hand\ side\r\n\ \ \ \ \ \ \ \ with\ respect\ to\ the\ right\ hand\ edge\ of\ the\ game\ window\ and\ limits\ it\ accordingly.</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Roger\ Evans\ (modified\ by\ Ryan\ Light)\r\n
comment15.params=
comment15.target=javafx.scene.layout.Pane\ getPane()
comment15.text=\r\n\ \ \ \ \ \ \ \ <h2>Gets\ the\ current\ pane</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ is\ called\ by\ the\ model,\ when\ it\ needs\ to\ spawn\ a\ label\ (particle\ effect).</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ @return\ The\ current\ pane\r\n
comment2.params=topMen
comment2.target=void\ sortScores(java.util.ArrayList)
comment2.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ sorts\ the\ players\ into\ highest\ score\ first</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ wanted\ to\ use\ objects\ to\ hold\ the\ high\ scores\ (because\ there\ are\ 2\ different\ data\ types).\r\n\ \ \ \ \ \ \ \ They\ are\ kept\ in\ an\ arrayList,\ which\ allows\ for\ adding\ new\ players.\ \ This\ code\ uses\ a\ bubble\ sort\ to\ \r\n\ \ \ \ \ \ \ \ check\ each\ player\ object\ against\ the\ immediate\ one\ to\ their\ left.\ \ If\ the\ one\ to\ the\ left\ has\ a\ smaller\ score\r\n\ \ \ \ \ \ \ \ then\ their\ positions\ in\ the\ array\ are\ switched.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>I\ have\ read\ about\ concerns\ with\ the\ efficiency\ of\ bubble\ sort,\ but\ for\ the\ few\ objects\ in\ this\ arrayList,\ \r\n\ \ \ \ \ \ \ \ I\ felt\ it\ was\ not\ worth\ spending\ time\ finding\ an\ alternative\ for\ the\ few\ milliseconds\ it\ would\ save.</p>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>With\ respect\ to\ the\ constant\ creation\ of\ new\ panes\ for\ the\ different\ game\ 'windows';\ Roger\ did\ question\ it,\ \r\n\ \ \ \ \ \ \ \ but\ I\ have\ not\ noticed\ any\ subsequent\ problems.\ \ I\ presume\ they\ would\ be\ culled\ by\ the\ Garbage\ Collector,\ \r\n\ \ \ \ \ \ \ \ but\ I\ don't\ know\ enough\ about\ it\ to\ be\ sure.\ \ I\ think\ it\ would\ not\ be\ too\ troublesome\ to\ recode\ it\ to\ use\ the\ same\ \r\n\ \ \ \ \ \ \ \ pane\ and\ destroy\ all\ the\ old\ elements,\ then\ make\ new\ ones\ (or\ hide\ and\ unhide\ as\ required).\ \ I\ did\ not\ want\ to\ do\ this\ \r\n\ \ \ \ \ \ \ \ during\ development\ of\ this\ small\ application\ though\ because\ there\ were\ enough\ problems\ without\ introducing\ new\ ones.\ \ \r\n\ \ \ \ \ \ \ \ I\ feel\ though\ that\ now\ the\ codebase\ is\ more\ stable,\ it\ is\ something\ that\ could\ be\ looked\ at\ \r\n\ \ \ \ \ \ \ \ (or\ at\ least\ noted\ for\ future\ works).</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ topMen\ An\ array\ of\ {@code\ Player}\ objects\r\n
comment3.params=pane\ content\ xPos\ yPos
comment3.target=javafx.scene.control.Label\ addLabel(javafx.scene.layout.Pane,\ java.lang.String,\ int,\ int)
comment3.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ creates\ labels\ and\ positions\ them\ on\ screen</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ is\ a\ fairly\ mundane\ method\ to\ automate\ the\ process\ of\ making\ labels.\ \ I\ just\ felt\ it\ tidied\ up\ \r\n\ \ \ \ \ \ \ \ the\ code,\ and\ makes\ it\ easier\ to\ read.</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ pane\ The\ current\ pane\r\n\ \ \ \ \ \ \ \ @param\ content\ The\ message\ to\ be\ added\ to\ the\ label\r\n\ \ \ \ \ \ \ \ @param\ xPos\ The\ x\ position\ of\ the\ label\r\n\ \ \ \ \ \ \ \ @param\ yPos\ The\ y\ position\ of\ the\ label\r\n\ \ \ \ \ \ \ \ @return\ The\ label\ object\r\n
comment4.params=window
comment4.target=void\ intro(javafx.stage.Stage)
comment4.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ creates\ the\ Intro\ Screen</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ creates\ the\ screen\ that\ greets\ the\ player\ when\ they\ load\ the\ game,\ or\ exit\ their\ current\ one.\r\n\ \ \ \ \ \ \ \ It\ houses\ the\ high\ score\ table.\ \ The\ top\ 5\ player\ objects\ will\ have\ their\ details\ displayed,\ with\ the\ names\ on\ the\ \r\n\ \ \ \ \ \ \ \ left\ and\ corresponding\ score\ on\ the\ right\ (via\ iterating\ through\ {@code\ topMen}\ with\ a\ {@code\ for}\ loop).</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ window\ The\ current\ Window\ object\r\n
comment5.params=e
comment5.target=void\ handle(javafx.event.ActionEvent)
comment6.params=window
comment6.target=void\ nextLevel(javafx.stage.Stage)
comment6.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ creates\ the\ 'Level\ ...'\ Screen</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ creates\ the\ screen\ that\ The\ player\ sees\ when\ they\ complete\ a\ level\ (or\ start\ the\ game).\ \ It\ offeres\ them\ a\ small\ countdown\ so\ \r\n\ \ \ \ \ \ \ \ they\ have\ a\ few\ seconds\ to\ prepare\ for\ the\ next\ level.\ \ I\ had\ some\ trouble\ implementing\ a\ timer\ to\ run\ the\ countdown,\ so\ I\ used\ the\ following\ as\ reference\:\r\n\ \ \ \ \ \ \ \ See\ <a\ href\="Stack\ Overflow">https\://stackoverflow.com/questions/26916640/javafx-not-on-fx-application-thread-when-using-timer</a></p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ window\ The\ current\ Window\ object\r\n
comment7.params=
comment7.target=void\ run()
comment8.params=window
comment8.target=void\ gameOver(javafx.stage.Stage)
comment8.text=\r\n\ \ \ \ \ \ \ \ <h2>This\ creates\ the\ 'Game\ Over'\ Screen</h2>\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ <p>This\ method\ creates\ the\ screen\ that\ The\ player\ uses\ to\ see\ their\ score\ and\ input\ their\ name\ so\ it\ can\ be\ saved\ to\ the\ \r\n\ \ \ \ \ \ \ \ high\ score\ table.\ \ The\ button\ has\ an\ eventhandler\ attached\ to\ load\ the\ {@code\ intro()}\ method\ and\ add\ the\ player\ details\ to\ \ \r\n\ \ \ \ \ \ \ \ a\ new\ object\ in\ the\ {@code\ topMen}\ arraylist.\ \ It\ seemed\ prudent\ to\ use\ event-driven\ code\ to\ achieve\ this\ rather\ than\ attempt\ \r\n\ \ \ \ \ \ \ \ another\ method.</p>\r\n\r\n\ \ \ \ \ \ \ \ @author\ Ryan\ Light\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ @param\ window\ The\ current\ Window\ object\r\n
comment9.params=e
comment9.target=void\ handle(javafx.event.ActionEvent)
numComments=16
